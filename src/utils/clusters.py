from ..utils.actors import ActorStats
import numpy as np
import matplotlib.pyplot as plt
from tqdm.notebook import tqdm

class ClusterStats():
    """
    Gives access to various functions about list of clusters
    """

    def __init__(self):
        """
        Creates a ClusterStats object.
        """
        self.actor_stats = ActorStats()

    
    def age_distribution(self, clusters, plot=False):
        """
        Gets the distribution of mean ages at release across a list of clusters.
        Optionally, it can plot a histogram of the mean age distribution across the clusters.
        
        Parameters
        ----------
        clusters : list of Cluster
            A list of Cluster objects for which the mean age at the time of movie release will be calculated.
        
        plot : bool, optional
            If True, a histogram displaying the distribution of mean ages at release across clusters will be shown. Defaults to False.
        
        Returns
        -------
        list of float
            A list containing the mean age at release for each cluster in the specified list of clusters.
        """
        means = [np.nanmean(self.actor_stats.cluster_ages(cluster)) for cluster in clusters]
        if plot:
            plt.hist(means)
            plt.title("Distribution of mean age at release accross clusters")
            plt.xlabel("Average age at release")
            plt.ylabel("Number of clusters")
            plt.show()
        return means      


    def revenue_distribution(self, clusters, plot=False):
        """
        Calculates the distribution of mean revenue generated by actors across a list of clusters.
        Optionally, it can plot a histogram of the mean revenue distribution across the clusters.
        
        Parameters
        ----------
        clusters : list of Cluster
            A list of Cluster objects for which the mean revenue generated by actors will be calculated.
        
        plot : bool, optional
            If True, a histogram displaying the distribution of mean revenue across clusters will be shown. Defaults to False.
        
        Returns
        -------
        list of float
            A list containing the mean revenue for each cluster in the specified list of clusters.
        """
        means = []
        for i in tqdm(range(len(clusters))):
            means.append(self.actor_stats.cluster_mean_revenue(clusters[i]))
        if plot:
            plt.hist(means)
            plt.title("Distribution of mean revenue accross clusters")
            plt.xlabel("Average revenue generated by actors in the cluster")
            plt.ylabel("Number of clusters")
            plt.show()
        return means   